{"version":3,"sources":["List.js","Alert.js","App.js","index.js"],"names":["List","items","removeItem","editItem","className","map","item","id","title","key","type","onClick","Alert","msg","removeAlert","list","useEffect","timeout","setTimeout","clearTimeout","App","useState","name","setName","localStorage","getItem","JSON","parse","setList","isEditing","setIsEditing","editID","setEditID","show","alert","setAlert","showAlert","setItem","stringify","onSubmit","e","preventDefault","console","log","newItem","Date","getTime","toString","placeholder","value","onChange","target","length","newList","filter","specificItem","find","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1e5e5f3.chunk.js","sourcesContent":["import React from 'react'\nimport { FaEdit, FaTrash } from 'react-icons/fa'\nconst List = ({items,removeItem, editItem}) => {\n    return <div className='grocery-list'>\n        {items.map((item) => {\n            const {id, title} = item;\n            return <article key={id} className='grocery-item'>\n                <p className='title'>{title}</p>\n                <div className='btn-container'>\n                    <button type='button' className='edit-btn' onClick={() => editItem(id)}>\n                        <FaEdit />\n                    </button>\n                    <button type='button' className='del-btn' onClick={() => removeItem(id)}>\n                        <FaTrash />\n                    </button>\n                </div>\n            </article>\n        })}\n    </div>\n}\n\nexport default List\n","import React, { useEffect } from 'react'\n\nconst Alert = ({type,msg, removeAlert, list}) => {\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            removeAlert();\n        },3000)\n        return () => clearTimeout(timeout);\n    }, [list])\n\n    return <p \n    className={`alert alert-${type}`}>\n        {msg}\n    </p>\n}\n\nexport default Alert\n","import React, { useState, useEffect } from 'react'\nimport List from './List'\nimport Alert from './Alert'\n\nconst getLocalStorage = () => {\n    let list = localStorage.getItem('list');\n    if (list) {\n        return JSON.parse(localStorage.getItem('list'));\n    }\n    else {\n        return [];\n    }\n}\n\nfunction App() {\n    const [name, setName] = useState('');\n    const [list, setList] = useState(getLocalStorage());\n    const [isEditing, setIsEditing] = useState(false);\n    const [editID, setEditID] = useState(null);\n    const [alert, setAlert] = useState({\n        show:false,\n        msg:'',\n        type:''\n    });\n\n    const showAlert = (show=false,type='',msg='') => {\n        setAlert({show:show, type:type, msg:msg})\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('hello');\n        if (!name) {\n            // Display alert\n            showAlert(true,'danger','please enter the value');\n        }\n        else if (name && isEditing){\n            // Deal with Edit\n            showAlert(true,'success','edit successfully');\n            setList(list.map((item) => {\n                if (item.id === editID)\n                    item.title = name\n                return item;\n            }))\n            setEditID(null);\n            setName('');\n            setIsEditing(false);\n        }\n        else {\n            showAlert(true,'success','item added to the list')\n            // Show Alert\n            const newItem = {id: new Date().getTime().toString(), title:name};\n            setList([...list, newItem]);\n            setName('');\n            if (alert.show) {\n                alert.show = false;\n            }\n        }\n    }\n\n    const handleClear = () => {\n        setList([]);\n        setName('');\n        showAlert(true,'danger','empty list');\n    }\n\n    const removeItem = (id) => {\n        showAlert(true,'danger','item removed');\n        const newList = list.filter(item => item.id !== id);\n        setList(newList);\n    }\n\n    const editItem = (id) => {\n        const specificItem = list.find((item)=> item.id === id);\n        setIsEditing(true);\n        setEditID(id);\n        setName(specificItem.title);\n    }\n\n    useEffect(() => {\n        localStorage.setItem('list', JSON.stringify(list)); \n    }, [list])\n\n    return <section className='section-center'>\n        <form className='grocery-form' onSubmit={handleSubmit}>\n            {alert.show && <Alert {...alert} removeAlert={showAlert} list={list}/>}\n            <h3>grocery bud</h3>\n            <div className='form-control'>\n                <input type='text' \n                    className='grocery' \n                    placeholder='e.g. eggs' \n                    value={name} \n                    onChange={(e) => setName(e.target.value)}>\n                </input>\n                <button type='submit' className='submit-btn'>\n                    {isEditing? 'edit' : 'submit'}\n                </button>\n            </div>\n        </form>\n        {\n            list.length > 0 && (\n                <div className='grocery-container'>\n                    <List items={list} removeItem={removeItem} editItem={editItem} />\n                    <button className='clear-btn' onClick={handleClear}>\n                        clear items\n                    </button>\n                </div>\n            )\n        }\n    </section>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}